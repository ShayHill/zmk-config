/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <dt-bindings/zmk/pointing.h>

/* / { */
/*         keymap { */
/*                 compatible = "zmk,keymap"; */

/*                 default_layer { */
/* // ----------------------------------------------------------------------------------------- */
/* // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC | */
/* // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   | */
/* // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  | */
/* //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT | */
/*                         bindings = < */
/*    &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC */
/*    &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT */
/*    &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC */
/*                   &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT */
/*                         >; */
/*                 }; */
/*                 lower_layer { */
/* // ----------------------------------------------------------------------------------------- */
/* // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC | */
/* // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      | */
/* // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      | */
/* //                    | GUI |     | SPC |   | ENT |     | ALT | */
/*                         bindings = < */
/*    &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC */
/*    &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans */
/*    &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans */
/*                                     &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT */
/*                         >; */
/*                 }; */

/*                 raise_layer { */
/* // ----------------------------------------------------------------------------------------- */
/* // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC | */
/* // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   | */
/* // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   | */
/* //                    | GUI |     | SPC |   | ENT |     | ALT | */
/*                         bindings = < */
/*    &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC */
/*    &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE */
/*    &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE */
/*                              &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT */
/*                         >; */
/*                 }; */
/*         }; */
/* }; */


/ {
        keymap {
                compatible = "zmk,keymap";
        layer0 {
                bindings = <
&none           &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P           &none
&none           &mt LSFT A      &lt 2 S         &lt 1 D         &lt 3 F         &kp G           &kp H           &lt 4 J         &lt 5 K         &lt 6 L         &mt LSFT ENTER  &none
&none           &kp Z           &mt LCTL X      &mt LALT C      &kp V           &kp B           &kp N           &kp M           &mt LALT COMMA  &mt LCTL DOT    &kp FSLH        &none
                                                &none           &lt 8 TAB       &kp BSPC        &lt 7 SPC       &lt 8 TAB       &none
                >;
        };
        layer1 {
                bindings = <
&none           &trans          &trans          &trans          &trans          &trans          &mkp MB1        &msc SCRL_UP    &mkp MB2        &trans          &trans          &none
&none           &kp LSHFT       &mkp MB2        &none           &mkp MB1        &trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT &kp RSHFT       &none
&none           &trans          &kp LCTL        &kp LALT        &trans          &trans          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT &kp RCTL        &trans          &none
                                                &none           &trans          &trans          &trans          &trans          &none
                >;
        };
        layer2 {
                bindings = <
&none           &trans          &trans          &trans          &trans          &trans          &kp HOME        &kp PG_DN       &kp PG_UP       &kp END         &trans          &none
&none           &kp LC(LA(LSFT))&none           &kp LC(LALT)    &kp LGUI        &trans          &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &kp RSHFT       &none
&none           &trans          &kp LCTL        &kp LALT        &trans          &trans          &trans          &trans          &kp RALT        &kp RCTL        &trans          &none
                                                &none           &trans          &trans          &trans          &trans          &none
                >;
        };
        layer3 {
                bindings = <
&none           &trans          &trans          &trans          &trans          &trans          &trans          &kp UNDER       &kp PIPE        &kp SQT         &trans          &none
&none           &kp CARET       &kp STAR        &kp AMPS        &none           &trans          &kp NUHS        &kp TILDE       &kp FSLH        &kp DQT         &kp DLLR        &none
&none           &trans          &kp LCTL        &kp LALT        &trans          &trans          &trans          &kp MINUS       &kp BSLH        &kp GRAVE       &trans          &none
                                                &none           &trans          &trans          &trans          &trans          &none
                >;
        };
        layer4 {
                bindings = <
&none           &trans          &kp COLON       &kp LT          &kp GT          &kp SEMI        &trans          &trans          &trans          &trans          &trans          &none
&none           &kp LBRC        &kp RBRC        &kp LPAR        &kp RPAR        &kp AT          &trans          &none           &kp EQUAL       &kp PLUS        &kp PERCENT     &none
&none           &trans          &kp EXCL        &kp LBKT        &kp RBKT        &kp C_MUTE      &trans          &trans          &kp RALT        &kp RCTL        &trans          &none
                                                &none           &kp C_VOL_DN    &trans          &trans          &kp C_VOL_UP    &none
                >;
        };
        layer5 {
                bindings = <
&none           &trans          &kp F7          &kp F8          &kp F9          &kp F10         &trans          &trans          &trans          &trans          &kp PSCRN       &none
&none           &kp LSHFT       &kp F4          &kp F5          &kp F6          &kp F11         &trans          &none           &kp LC(LALT)    &none           &kp RSHFT       &none
&none           &trans          &kp F1          &kp F2          &kp F3          &kp F12         &trans          &trans          &kp RALT        &kp RCTL        &trans          &none
                                                &none           &trans          &trans          &trans          &trans          &none
                >;
        };
        layer6 {
                bindings = <
&none           &kp KP_SLASH    &kp KP_NUMBER_7 &kp KP_NUMBER_8 &kp KP_NUMBER_9 &kp KP_PLUS     &trans          &trans          &trans          &trans          &trans          &none
&none           &kp KP_NUMBER_0 &kp KP_NUMBER_4 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_MINUS    &trans          &none           &none           &none           &kp RSHFT       &none
&none           &kp KP_ASTERISK &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_EQUAL    &trans          &trans          &trans          &trans          &trans          &none
                                                &none           &trans          &trans          &trans          &trans          &none
                >;
        };
        layer7 {
                bindings = <
&none           &trans          &trans          &kp COLON       &kp ESC         &trans          &trans          &trans          &trans          &trans          &kp DEL         &none
&none           &trans          &kp PERCENT     &kp FSLH        &kp ENTER       &trans          &none           &kp RGUI        &none           &none           &kp RSHFT       &none
&none           &trans          &trans          &trans          &kp EXCL        &trans          &none           &trans          &mt LALT COMMA  &mt LCTL DOT    &bootloader     &none
                                                &none           &caps_word      &kp TAB         &trans          &kp CAPS        &none
                >;
        };
        layer8 {
                bindings = <
&none           &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &none
&none           &sk LSFT        &trans          &trans          &sk LGUI        &trans          &trans          &sk RGUI        &trans          &trans          &sk RSFT        &none
&none           &trans          &sk LCTL        &sk LALT        &trans          &trans          &trans          &trans          &sk RALT        &sk RCTL        &trans          &none
                                                &none           &none           &trans          &trans          &none           &none
                >;
        };
        };
};
